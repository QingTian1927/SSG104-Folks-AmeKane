---
import { supabase } from "../database/supabase/client";
import { db } from "../database/databaseUtils";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    return redirect("/signin");
}

const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
});

if (error) {
    cookies.delete("sb-access-token", {
        path: "/",
    });
    cookies.delete("sb-refresh-token", {
        path: "/",
    });

    return redirect("/signin");
}

const userId = data.user?.id;

const { data: accountData, error: accountError } = await db.select.account(userId);
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Astro</title>
    </head>
    <body>
        <h1>Welcome {userId}</h1>
        <p>We are happy to see you here</p>

        { accountData && (accountData.map((account) => <p>{account.title}</p>))}

        <form action="/api/insert/transaction" method="POST">
            <label for="title">Title:</label>
            <input type="text" name="title" id="title" />
            <label for="category_id">Category:</label>
            <input type="text" name="category_id" id="category_id" />
            <label for="account_id">Account:</label>
            <input type="text" name="account_id" id="account_id" />
            <label for="value">Value:</label>
            <input type="text" name="value" id="value" />
            <button type="submit">Create transaction</button>
        </form>

        <form action="/api/auth/signout">
            <button type="submit">Sign out</button>
        </form>
    </body>
</html>
