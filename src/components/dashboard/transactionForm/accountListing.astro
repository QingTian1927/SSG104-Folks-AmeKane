---
import type { Tables } from "../../../database/database.types";
import { db } from "../../../database/databaseUtils";
import type { ID } from "../../../database/models";
import type { languages } from "../../../i18n/ui";
import { useTranslations } from "../../../i18n/utils";

interface Props {
    userId: ID;
    lang?: keyof typeof languages;
    transaction?: Tables<"Transaction">;
}

const { userId, lang = "vi", transaction } = Astro.props;
const translate = useTranslations(lang);

const { data: accounts, error: accountsError } =
    await db.select.account(userId);
if (accountsError) {
    console.error(accountsError);
    return Astro.redirect("/500");
}

const { data: preferences, error: preferencesError } =
    await db.select.preferences(userId);
if (preferencesError) {
    console.error(preferencesError);
    return Astro.redirect("/500");
}

const defaultAccount = preferences[0].default_account;
const previousPage = Astro.url.pathname;
---

<div class="w-full flex flex-wrap items-center justify-start gap-4">
    <button
        id="new-account-button"
        type="button"
        class="w-fit py-3 px-6 rounded-md font-medium flex items-center justify-center bg-zinc-200 hover:bg-zinc-300 dark:bg-zinc-700 dark:hover:bg-zinc-600"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="1.15rem"
            height="100%"
            class="bi bi-plus-circle-fill mr-2 fill-zinc-800 dark:fill-zinc-100"
            viewBox="0 0 16 16"
        >
            <path
                d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"
            ></path>
        </svg>
        <span>{translate("dashboard.create")}</span>

        <script define:vars={{ previousPage }}>
            document
                .getElementById("new-account-button")
                .addEventListener("click", () => {
                    fetch("/api/appendPreviousPage", {
                        method: "POST",

                        body: JSON.stringify({
                            previous_page: previousPage,
                        }),

                        headers: {
                            "Content-Type": "application/json",
                        },
                    }).then((response) => {
                        if (!response.ok) {
                            console.error(
                                `Failed to set the previous page to: ${previousPage}`
                            );
                            console.error({ response });
                        }
                    });

                    window.location.href = "/dashboard/new/account";
                });
        </script>
    </button>

    <output id="accounts-length" class="hidden" aria-hidden="true">{accounts.length}</output>
    {
        accounts &&
            accounts.map((account) => (
                <label
                    for={account.id}
                    class="group relative w-fit py-3 px-6 rounded-md font-medium flex items-center justify-center cursor-pointer"
                >
                    <span class="">{account.title}</span>
                    <input
                        type="radio"
                        id={account.id}
                        name="account_id"
                        value={account.id}
                        checked={
                            transaction
                                ? account.id === transaction.account_id
                                    ? true
                                    : undefined
                                : account.id === defaultAccount
                                  ? true
                                  : undefined
                        }
                        required
                        class="absolute -z-[1] size-full rounded-md border-none focus:ring-transparent focus:outline-none focus:ring-offset-0 focus:bg-none checked:bg-none bg-zinc-200 group-hover:bg-zinc-300 dark:bg-zinc-700 dark:group-hover:bg-zinc-600 text-cyan-500 dark:text-blue-700 checked:group-hover:bg-cyan-500 dark:checked:group-hover:bg-blue-700"
                    />
                </label>
            ))
    }
</div>
