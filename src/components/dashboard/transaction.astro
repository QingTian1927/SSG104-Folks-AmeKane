---
import type { Tables } from "../../database/database.types";
import { auth, db } from "../../database/databaseUtils";
import type { ID } from "../../database/models";
import { supabase } from "../../database/supabase/client";
import type { languages } from "../../i18n/ui";
import { useTranslations } from "../../i18n/utils";
import { categoryColors } from "./categoryForm/colorListing.astro";

interface Props {
    lang?: keyof typeof languages;
    userId?: ID;
    transaction: Tables<"Transaction">;
}

const {
    lang = "vi",
    userId = await auth.user.getId(),
    transaction,
} = Astro.props;
const translate = useTranslations(lang);

if (!userId) {
    return Astro.redirect("/500");
}

const { data: account, error: accountError } = await supabase
    .from("Account")
    .select()
    .eq("id", transaction.account_id);
if (accountError) {
    console.error(accountError);
    return Astro.redirect("/500");
}

const { data: category, error: categoryError } = await supabase
    .from("Category")
    .select()
    .eq("id", transaction.category_id);
if (categoryError) {
    console.error(categoryError);
    return Astro.redirect("/500");
}

const { data: preferences, error: preferencesError } =
    await db.select.preferences(userId);
if (preferencesError) {
    console.error(preferencesError);
    return Astro.redirect("/500");
}

const { currency } = preferences[0];
const { title: accountTitle } = account[0];
const transactionDate = new Date(transaction.date);
const backgroundColor = categoryColors[category[0].this_color].bg;
---

<a
    href={`/dashboard/transaction/${transaction.id}`}
    class="w-full max-w-full overflow-x-hidden p-2 lg:p-4 rounded-lg flex items-center justify-between gap-2 hover:bg-zinc-200 dark:hover:bg-zinc-800"
    title={transaction.is_income ? `Khoản thu: +${transaction.value}` : `Khoản chi: -${transaction.value}`}
>
    <div
        class="relative grow max-w-[75%] sm:max-w-[85%] lg:max-w-[90%] xl:max-w-[85%] h-full flex items-center justify-start gap-4"
    >
        <div class="h-[85%] aspect-square">
            <div
                class:list={[`size-full rounded-full ${backgroundColor}`]}
                title={category[0].title}
            >
            </div>
        </div>

        <div
            class="grow max-w-[75%] xs:max-w-[90%] lg:max-w-[90%] xl:max-w-[85%] h-full flex flex-col items-start justify-start"
        >
            <span class="grow max-w-full font-semibold truncate text-sm lg:text-base"
                >{transaction.title}</span
            >
            <span class="grow text-xs lg:text-sm truncate"
                >{accountTitle} • <time
                    datetime={transactionDate.toLocaleString()}
                    >{transactionDate.toLocaleDateString()}</time
                ></span
            >
        </div>
    </div>

    <span
        class:list={[
            "shrink-0 min-w-fit font-semibold text-base lg:text-lg",
            transaction.is_income ? "text-green-500" : "text-red-500",
        ]}
        >{transaction.is_income ? "+" : "-"}
        {transaction.value}
        {currency}
    </span>
</a>
